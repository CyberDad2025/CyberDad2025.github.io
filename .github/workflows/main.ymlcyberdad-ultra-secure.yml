name: CyberDad Ultra-Secure CTI Generator

on:
  schedule:
    # Runs 3 times daily: 9 AM, 1 PM, 8 PM EST
    - cron: '0 14 * * *'  # 9 AM EST (14:00 UTC)
    - cron: '0 18 * * *'  # 1 PM EST (18:00 UTC)  
    - cron: '0 1 * * *'   # 8 PM EST (01:00 UTC next day)
  workflow_dispatch:      # Allow manual trigger

jobs:
  generate-secure-content:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    
    steps:
    - name: 🔍 Checkout Repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: 🐍 Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: 📦 Install Security Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests>=2.28.0
        pip install openai>=0.27.0
        pip install feedparser>=6.0.0
        pip install beautifulsoup4>=4.11.0
        pip install PyYAML>=6.0
        pip install cryptography>=3.4.8
        pip install psutil>=5.9.0
        pip install user-agent>=0.1.9
        
    - name: 🛡️ Run Ultra-Secure Content Generator
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
      run: |
        echo "🚀 Starting CyberDad Ultra-Secure CTI Generation..."
        python scripts/content_generator.py
        echo "✅ Content generation completed successfully"
        echo "✅ Content generation completed successfully"
        echo "📊 Updating analytics with accurate post count..."
        python scripts/analytics_fixed.py
        
    - name: 📝 Commit New Security Content
      run: |
        git config --local user.email "cyberdad-ai@github.com"
        git config --local user.name "CyberDad Ultra-Secure AI"
        git add _posts/ || true
        git add logs/ || true
        if git diff --staged --quiet; then
          echo "No new content to commit"
        else
          git commit -m "🛡️ Ultra-Secure CTI: Auto-generated family cybersecurity content $(date +'%Y-%m-%d %H:%M')"
          git push
          echo "✅ New security content published successfully"
        fi
        
    - name: 🔒 Security Cleanup
      if: always()
      run: |
        echo "🧹 Performing security cleanup..."
        # Clear any temporary files
        rm -rf /tmp/* 2>/dev/null || true
        rm -rf quarantine/*.tmp 2>/dev/null || true
        echo "✅ Security cleanup completed"
